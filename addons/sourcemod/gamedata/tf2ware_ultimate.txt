"Games"
{
	"tf"
	{
		// note: all gamedata here is optional and not required for the gamemode to function
		"Offsets"
		{
			// loadout cacher
			"CBasePlayer::EquipWearable"
			{
				"windows"	"438"
				"windows64"	"438"
				"linux"		"439"
				"linux64"	"439"
			}
			"CTFPlayer::InitClass"	
			{
				"windows"	"488"
				"windows64"	"488"
				"linux"		"495"
				"linux64"	"495"
			}
			"CTFPlayer::RemoveAllWeapons"	
			{
				"windows"	"313"
				"windows64"	"313"
				"linux"		"314"
				"linux64"	"314"
			}
		}
		"Signatures"
		{
			// loadout whitelister
			"CTFPlayer::GetLoadoutItem"
			{
				"library"		"server"
				// TODO: 64-bit gamedata if this approach is a success
				"linux"			"@_ZN9CTFPlayer14GetLoadoutItemEiib"
				"windows"		"\x55\x8B\xEC\x83\xEC\x10\x53\x56\x8B\xF1\x8B\x0D\x2A\x2A\x2A\x2A"
			}
		}
		"Functions"
		{
			// loadout cacher + whitelister
			"CTFPlayer::InitClass"
			{
				"offset"	"CTFPlayer::InitClass"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFPlayer::RemoveAllWeapons"
			{
				"offset"	"CTFPlayer::RemoveAllWeapons"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			// loadout whitelister
			"CTFPlayer::GetLoadoutItem"
			{
				"signature"		"CTFPlayer::GetLoadoutItem"
				"callconv"		"thiscall"
				"return"		"charptr" // objectptr
				"this"			"entity"
				"arguments"
				{
					"class"
					{
						"type"	"int"
					}
					"slot"
					{
						"type"	"int"
					}
					"print_failure"
					{
						"type"	"bool"
					}
				}
			}			
		}
	}
}